package main

import (
	"database/sql"

	"github.com/pgvector/pgvector-go"
)

// retrieveSimilarCVEDescriptions retrieves similar CVEs based on the embedding
func retrieveSimilarCVEDescriptions(db *sql.DB, embedding []float32) ([]string, error) {
	// Set search path
	_, err := db.Exec("SET search_path TO cve")
	if err != nil {
		return nil, err
	}

	// Main query
	query := `
	SELECT description 
	FROM cve_records 
	WHERE embedding IS NOT NULL
	ORDER BY embedding <-> $1
	LIMIT 5;`

	rows, err := db.Query(query, pgvector.NewVector(embedding))
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	var descriptions []string
	for rows.Next() {
		var description string
		if err := rows.Scan(&description); err != nil {
			return nil, err
		}
		descriptions = append(descriptions, description)
	}

	if err := rows.Err(); err != nil {
		return nil, err
	}

	return descriptions, nil
}
